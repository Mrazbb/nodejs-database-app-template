// Import the dotenv package
const dotenv = require('dotenv');
const fs = require('fs');
const path = require('path');

// Read and parse the .env file
const envFilePath = path.resolve(__dirname, '../main.env');
const envConfig = dotenv.parse(fs.readFileSync(envFilePath));

// Create a dictionary to store the environment variables from the .env file
const env = { ...envConfig };

// define all domains for ESHOP
let domains = [];


env[ 'docker_container_app' ] = env[ 'COMPOSE_PROJECT_NAME' ] + '_app';
env[ 'docker_container_eshop' ] = env[ 'COMPOSE_PROJECT_NAME' ] + '_eshop';
env[ 'docker_container_pg' ] = env[ 'COMPOSE_PROJECT_NAME' ] + '_postgres';
console.log(env[ 'docker_container_pg' ], env[ 'postgres_user' ], env[ 'postgres_password' ], env[ 'postgres_db' ]);
if (env[ 'docker_container_pg' ] && env[ 'postgres_user' ] && env[ 'postgres_password' ] && env[ 'postgres_db' ]) {
    env[ 'postgres' ] = `${env['postgres_user']}:${env['postgres_password']}@${env['docker_container_pg']}/${env['postgres_db']}`;
}



if (env[ 'cms_domains' ]) {
    env[ 'cms_domains' ].split(' ').map((domain) => {
        domains.push(domain);
    });

    domains = domains.filter(item => !!item);
    console.log('domain', domains);
}

let traefik_redirect_to_www = [];
let traefik_domains = [];

for (let i = 0; i < domains.length; i++) {
    traefik_redirect_to_www.push("Host(`" + domains[ i ].replace('www.', '') + "`)");
    traefik_domains.push("Host(`" + domains[ i ] + "`)");
}

// ipwhitelist=116.203.134.0/24, 172.27.0.0/24, 91.219.133.226,
let traefik_ipwhitelist = [];
if (env[ 'ipwhitelist' ]) {
    let ipwhitelist = env[ 'ipwhitelist' ]?.split(',')?.filter(ip => ip.trim() !== '');

    for (let i = 0; i < ipwhitelist.length; i++) {
        let ip = ipwhitelist[ i ].trim();
        traefik_ipwhitelist.push("ClientIP(`" + ip + "`)");
    }
}

traefik_ipwhitelist = traefik_ipwhitelist.join(' || ');
env[ 'traefik_ipwhitelist' ] = traefik_ipwhitelist;

if (env[ 'domain_app' ]) {

    traefik_domains.push( "Host(`" + env[ 'domain_app' ] + "`)" );
}

traefik_redirect_to_www = traefik_redirect_to_www.join(' || ');
traefik_domains = traefik_domains.join(' || ');
env[ 'traefik_redirect_to_www' ] = traefik_redirect_to_www;
env[ 'traefik_domains' ] = traefik_domains;


// WRITE 

// Log the dictionary to verify
configfile = '// This file is generated by generate_configfile.js\n';
envfile = '# This file is generated by generate_configfile.js\n';

Object.keys(env).forEach((key) => {
    if(['api', 'cors', 'tmsurl', 'tms'].includes(key)) {
        configfile += `$`;
        console.log('found', key, env[ key ]);
    }
    configfile += `${key} : ${env[ key ]}\n`;
    envfile += `${key}=${env[ key ]}\n`;
});



fs.writeFileSync(path.resolve(__dirname, '../config'), configfile);
fs.writeFileSync(path.resolve(__dirname, '../.env'), envfile);

console.log('Config file generated successfully');